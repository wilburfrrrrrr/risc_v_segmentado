$date
	Sat Sep 02 23:14:13 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module ru_tb $end
$var wire 32 ! RU2_tb [31:0] $end
$var wire 32 " RU1_tb [31:0] $end
$var reg 32 # RUdw_tb [31:0] $end
$var reg 1 $ RUwrite_tb $end
$var reg 1 % clk_tb $end
$var reg 5 & rd_tb [4:0] $end
$var reg 5 ' rs1_tb [4:0] $end
$var reg 5 ( rs2_tb [4:0] $end
$scope module dut $end
$var wire 32 ) RU1 [31:0] $end
$var wire 32 * RU2 [31:0] $end
$var wire 32 + RUdw [31:0] $end
$var wire 1 $ RUwrite $end
$var wire 1 % clk $end
$var wire 5 , rd [4:0] $end
$var wire 5 - rs1 [4:0] $end
$var wire 5 . rs2 [4:0] $end
$scope begin $ivl_foreach0 $end
$var integer 32 / i [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b100000 /
b0 .
b0 -
b0 ,
b0 +
b0 *
b0 )
b0 (
b0 '
b0 &
0%
0$
b0 #
b0 "
b0 !
$end
#10
1%
#20
0%
b10101010101010101010101010010101 #
b10101010101010101010101010010101 +
b10101 &
b10101 ,
1$
#30
1%
#40
0%
b11110101011001011111101010010101 #
b11110101011001011111101010010101 +
b10010 &
b10010 ,
0$
#50
1%
#60
0%
b10010 (
b10010 .
b10101010101010101010101010010101 "
b10101010101010101010101010010101 )
b10101 '
b10101 -
1$
#70
b11110101011001011111101010010101 !
b11110101011001011111101010010101 *
1%
#80
0%
0$
